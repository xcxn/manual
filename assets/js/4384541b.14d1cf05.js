"use strict";(self.webpackChunkmanual=self.webpackChunkmanual||[]).push([[8730],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6357:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],s={sidebar_position:0},c="Overview",p={unversionedId:"profile-format/overview",id:"profile-format/overview",title:"Overview",description:"Surfboard follow Surge's profile format",source:"@site/docs/profile-format/overview.md",sourceDirName:"profile-format",slug:"/profile-format/overview",permalink:"/docs/profile-format/overview",editUrl:"https://github.com/getsurfboard/manual/edit/main/docs/profile-format/overview.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"How to use this app",permalink:"/docs/how_to_use_this_app"},next:{title:"// Comment",permalink:"/docs/profile-format/comment"}},l={},d=[],u={toc:d};function m(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"overview"},"Overview"),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Surfboard follow ",(0,a.kt)("a",{parentName:"p",href:"https://nssurge.com/"},"Surge"),"'s profile format"),(0,a.kt)("p",{parentName:"div"},"Surge's profile documentation can be viewed ",(0,a.kt)("a",{parentName:"p",href:"https://manual.nssurge.com/"},"here")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"#!MANAGED-CONFIG http://test.com/surfboard.conf interval=60 strict=true # subscribe profile url and auto update config\n[General]\n# Specify dns server used by application\ndns-server = system, 8.8.8.8, 8.8.4.4, 9.9.9.9:9953\n\n# Specify route rule and domain rule, matching traffic will not be redirected or rejected.\nskip-proxy = 127.0.0.1, 192.168.0.0/16, 10.0.0.0/8, 172.16.0.0/12, 100.64.0.0/10, localhost, *.local, www.baidu.com //444\n\n# Test url used by url-test and manually node speed test.\nproxy-test-url = http://www.gstatic.com/generate_204\n\n# Match domain won't get fake ip dns response\nalways-real-ip = *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com\n\n# Establish a http proxy server on your device and provide proxy service in specified ip\nhttp-listen = 0.0.0.0:1234\n\n# Establish a socks5 proxy server on your device and provide proxy service in specified ip\nsocks5-listen = 127.0.0.1:1235\n\n[Host]\n# map 'abc.com' to '1.2.3.4'\nabc.com = 1.2.3.4\n\n# map any domain end with '.dev' to '6.7.8.9'\n*.dev = 6.7.8.9\n\n# alias 'bar.com' dns query result to 'foo.com'\nfoo.com = bar.com\n\n# assign '8.8.8.8' as dns server for 'bar.com'\nbar.com = server:8.8.8.8\n\n[Proxy]\n# build in policy\nOn = direct\nOff = reject\n\n# http proxy\nProxyHTTP = http, 1.2.3.4, 443, username, password\n\n# https proxy\nProxyHTTPS = https, 1.2.3.4, 443, username, password, skip-cert-verify=true, sni=www.google.com\n\n# socks5 proxy\nProxySOCKS5 = socks5, 1.2.3.4, 443, username, password, udp-relay=false\n\n# socks5 over tls proxy\nProxySOCKS5TLS = socks5-tls, 1.2.3.4, 443, username, password, skip-cert-verify=true, sni=www.google.com\n\n# shadowsocks proxy, simple-obfs supported\nProxySS = ss, 1.2.3.4, 8000, encrypt-method=chacha20-ietf-poly1305, password=abcd1234, udp-relay=false, obfs=http, obfs-host=www.google.com, obfs-uri=/\n\n# vmess proxy, tls and websocket supported, pure tcp is not supported\nProxyVMess = vmess, 1.2.3.4, 8000, username=0233d11c-15a4-47d3-ade3-48ffca0ce119, udp-relay=false, ws=true, tls=true, ws-path=/v2, ws-headers=X-Header-1:value|X-Header-2:value, skip-cert-verify=true, sni=www.google.com, vmess-aead=true\n\n# trojan proxy, trojan grpc is not supported\nProxyTrojan = trojan, 192.168.20.6, 443, password=password1, udp-relay=false, skip-cert-verify=true, sni=www.google.com\n\n[Proxy Group]\n# proxy group whose selected proxy can be changed manually\nSelectGroup = select, ProxyHTTP, ProxyHTTPS, DIRECT, REJECT\n\n# proxy group whose selected proxy can be decided based on url test result automatically\nAutoTestGroup = url-test, ProxySOCKS5, ProxySOCKS5TLS, url=http://www.gstatic.com/generate_204, interval=600, tolerance=100, timeout=5, hidden=true\n\n# proxy group with a external proxies list url\nExternalGroup = select, policy-path=https://test.com/nodes.txt, policy-regex-filter=HK-.*\nAutoExternalGroup = url-test, policy-path=https://test.com/nodes.txt\n\n[Rule]\n# domain exact match 'www.apple.com' will be redirected to proxy named 'ProxyHTTP' in [Proxy] section \nDOMAIN,www.apple.com,ProxyHTTP\n\n# domain exact match 'www.google.com' will be redirected to proxy group named 'SelectGroup' in [Proxy Group] section\nDOMAIN,www.google.com,SelectGroup\n\n# domain ends with 'apple.com' will be redirected to 'Proxy', DNS query of this domain will triggered in the remote proxy\nDOMAIN-SUFFIX,apple.com,Proxy,force-remote-dns\n\n# domain contains 'google' keyword will be redirected to 'Proxy', a fake ip will be returned in DNS query\nDOMAIN-KEYWORD,google,Proxy,enhanced-mode\n\n# destination ip match route '192.168.0.0/16' will be sent directly\nIP-CIDR,192.168.0.0/16,DIRECT\n\n# destination ip located in United State will be rejected\nGEOIP,US,REJECT\n\n# traffic sent by application whose package name is 'com.android.vending' will be sent to 'Proxy'\nPROCESS-NAME,com.android.vending,Proxy  # android package name\n\n# traffic match external rules defined in 'https://ruleset.com/cn' will be sent to 'ProxyVMess'\nRULE-SET,https://ruleset.com/cn,ProxyVMess\n\n# traffic doesn't match rules above will be sent to 'ProxyTrojan'\nFINAL,ProxyTrojan\n")),(0,a.kt)("p",null,"You can read on for detailed definitions of different sections"))}m.isMDXComponent=!0}}]);